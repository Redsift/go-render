machine:
  environment:
    S6_V: v1.17.2.0
    CONTAINER_NAME: quay.io/redsift/go-render
  services:
    - docker

checkout:
  post:
    - git fetch --tags

dependencies:
  override:
    - cd root; curl -k -L https://github.com/just-containers/s6-overlay/releases/download/$S6_V/s6-overlay-amd64.tar.gz | tar xz
    - docker info
    - |
        VERSION=$(git describe --exact-match --tags 2>/dev/null || git rev-parse --short HEAD)
        echo -e package version'\n'const \('\n'Tag=\"`git describe --exact-match --tags`\"'\n'Commit=\"`git rev-parse --short HEAD`\"'\n'\)'\n' > version/tag.go
        set -e
        sudo docker build -t go-render-build .
        docker run -ti -v ~/go-render:/opt/gopath/src/github.com/redsift/go-render -v $CIRCLE_ARTIFACTS:/opt/gopath/bin go-render-build /bin/bash -c "cd /opt/gopath/src/github.com/redsift/go-render && glide install && go install github.com/redsift/go-render/render && go test github.com/redsift/go-render"
        mkdir -p root/usr/bin/local
        cp $CIRCLE_ARTIFACTS/render root/usr/bin/local
        sudo docker build -t $CONTAINER_NAME .
        echo "Tagging as $CONTAINER_NAME:$VERSION"
        docker tag $CONTAINER_NAME:latest $CONTAINER_NAME:$VERSION
test:
  override:
    - docker run $CONTAINER_NAME render version
    - |
        TEST=$(docker run $CONTAINER_NAME render metadata -f "{{.Title}}" http://www.google.com)
        echo $TEST
        [ "$TEST" == "Google" ]

deployment:
  prod:
    branch: master
    commands:
      - docker login -e $QUAY_EMAIL -u $QUAY_USER -p $QUAY_PASS quay.io
      - docker push $CONTAINER_NAME